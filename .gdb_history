q
cca
bt
c
q
c
bt
frame 11
q
q
c
bt
frame 10
set $pc=$pc+4
c
set $pc=$pc+4
c
c
q
c
bt
q
c
q
c
bt
frame 7
frame q
y
q
c
c
q
c
bt
frame 7
set $pc=$pc+4
c
set $pc=$pc+4
c
c
q
c
q
c
b
bt
frame 12
frame alloc::sync::Arc::strong_count(&wakers)
q
c
q
c
bt
frame 7
p process
frame 8
frame 9
p pid.name
2q
q
c
c
q
c
q
c
q
c
q
c
q
C
c
c
q
c
c
q
c
c
w
c
q
c
q
c
q
c
c
q
c
p info
p info.0
p info.1
p *info
p info.message.0
p info.message.0.0
p info.message.0.*
p *info.message.0
p info.message.0.pieces
p info.message.0.pieces[0]
p info.message.0.pieces[0]
break src/process.rs:rust_0bsd_riscv_kernel::process::Process::run_once 
c
c
c
c
c
bt
q
break src/process.rs:142
c
p self.pc
p self.epc
q
c
q
break src/process.rs:142
c
p self.epc
p self.pc
p self.trap_frame.pc
p self.trap_frame.pointer 
p *self.trap_frame.pointer 
p *self.trap_frame.pointer .pc
p self.trap_frame.pointer .pc
p self.trap_frame.pointer.pc
si
si 
si
si
x/10i $pc
si 
si
si
si
si
si
si
break switch_to_user_frame 
c
si 10
q
break switch_to_user_frame 
c
si 10
q
c
p info
p info.message
p info.message.pieces
p info.message.0.pieces
p info.message.0.pieces[0]
q
break switch_to_user_frame 
c
si 10
x/10i $pc
si 32
x/10i $pc
si 3
q
c
q
c
q
c
q
c
q
c
q
c
q

cq
q
c
q
c
q
c
@q
q
C
c
p info.messages
p info.message
p info.message.0
p info.message.0.0
p info.message.0.pieces
p info.message.0.pieces[0]
break switch_to_user_frame 
c
si 32
qq
q
q
break switch_to_user_frame 
si 35
q
break switch_to_user_frame 
si 32
q
break switch_to_user_frame 
c
si 32
info mem
x/10i $pc
x/30i $pc
p $satp
p/x $satp
*0x860b5000
p *0x860b5000
p/x *0x860b5000
p/x *0x860b5000@q
qy
q
c
c
q
c
q
c
bt
x/10i $pc
x/10i $pc
q
c
x
q
break switch_to_user_frame 
c
bt
x/10i $pc
si 5
x/10i $pc
x/10i $pc
q
c
q
c
bt
bt
p *$satp
p $satp
p/x $satp
q
c
q
c
q
c
info mem
q
